// Generated by view binder compiler. Do not edit!
package com.skydoves.colorpickerview.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ScrollView;
import android.widget.Space;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.skydoves.colorpickerview.ColorPickerView;
import com.skydoves.colorpickerview.R;
import com.skydoves.colorpickerview.sliders.AlphaSlideBar;
import com.skydoves.colorpickerview.sliders.BrightnessSlideBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ColorpickerviewDialogColorpickerBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final AlphaSlideBar alphaSlideBar;

  @NonNull
  public final FrameLayout alphaSlideBarFrame;

  @NonNull
  public final BrightnessSlideBar brightnessSlideBar;

  @NonNull
  public final FrameLayout brightnessSlideBarFrame;

  @NonNull
  public final ColorPickerView colorPickerView;

  @NonNull
  public final FrameLayout colorPickerViewFrame;

  @NonNull
  public final Space spaceBottom;

  private ColorpickerviewDialogColorpickerBinding(@NonNull ScrollView rootView,
      @NonNull AlphaSlideBar alphaSlideBar, @NonNull FrameLayout alphaSlideBarFrame,
      @NonNull BrightnessSlideBar brightnessSlideBar, @NonNull FrameLayout brightnessSlideBarFrame,
      @NonNull ColorPickerView colorPickerView, @NonNull FrameLayout colorPickerViewFrame,
      @NonNull Space spaceBottom) {
    this.rootView = rootView;
    this.alphaSlideBar = alphaSlideBar;
    this.alphaSlideBarFrame = alphaSlideBarFrame;
    this.brightnessSlideBar = brightnessSlideBar;
    this.brightnessSlideBarFrame = brightnessSlideBarFrame;
    this.colorPickerView = colorPickerView;
    this.colorPickerViewFrame = colorPickerViewFrame;
    this.spaceBottom = spaceBottom;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ColorpickerviewDialogColorpickerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ColorpickerviewDialogColorpickerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.colorpickerview_dialog_colorpicker, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ColorpickerviewDialogColorpickerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alphaSlideBar;
      AlphaSlideBar alphaSlideBar = ViewBindings.findChildViewById(rootView, id);
      if (alphaSlideBar == null) {
        break missingId;
      }

      id = R.id.alphaSlideBarFrame;
      FrameLayout alphaSlideBarFrame = ViewBindings.findChildViewById(rootView, id);
      if (alphaSlideBarFrame == null) {
        break missingId;
      }

      id = R.id.brightnessSlideBar;
      BrightnessSlideBar brightnessSlideBar = ViewBindings.findChildViewById(rootView, id);
      if (brightnessSlideBar == null) {
        break missingId;
      }

      id = R.id.brightnessSlideBarFrame;
      FrameLayout brightnessSlideBarFrame = ViewBindings.findChildViewById(rootView, id);
      if (brightnessSlideBarFrame == null) {
        break missingId;
      }

      id = R.id.colorPickerView;
      ColorPickerView colorPickerView = ViewBindings.findChildViewById(rootView, id);
      if (colorPickerView == null) {
        break missingId;
      }

      id = R.id.colorPickerViewFrame;
      FrameLayout colorPickerViewFrame = ViewBindings.findChildViewById(rootView, id);
      if (colorPickerViewFrame == null) {
        break missingId;
      }

      id = R.id.space_bottom;
      Space spaceBottom = ViewBindings.findChildViewById(rootView, id);
      if (spaceBottom == null) {
        break missingId;
      }

      return new ColorpickerviewDialogColorpickerBinding((ScrollView) rootView, alphaSlideBar,
          alphaSlideBarFrame, brightnessSlideBar, brightnessSlideBarFrame, colorPickerView,
          colorPickerViewFrame, spaceBottom);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

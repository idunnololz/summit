package com.idunnololz.summit.reddit_objects

data class UserInfo(
    val isEmployee: Boolean,
    val seenLayoutSwitch: Boolean,
    val hasVisitedNewProfile: Boolean,
    val prefNoProfanity: Boolean,
    val hasExternalAccount: Boolean,
    val prefGeopopular: String,
    val seenRedesignModal: Boolean,
    val prefShowTrending: Boolean,
    val subreddit: SubredditInfo,
    val isSponsor: Boolean,
    val goldExpiration: Any?,
    val numFriends: Int,
    val features: FeaturesInfo,
    val hasGoldSubscription: Boolean,
    val hasSubscribedToPremium: Boolean,
    val hasAndroidSubscription: Boolean,
    val hasIosSubscription: Boolean,
    val hasPaypalSubscription: Boolean,
    val hasStripeSubscription: Boolean,
    val verified: Boolean,
    val newModmailExists: Any?,
    val prefAutoplay: Boolean,
    val coins: Int,
    val id: String,
    val seenPremiumAdblockModal: Boolean,
    val canCreateSubreddit: Boolean,
    val over18: Boolean,
    val isGold: Boolean,
    val isMod: Boolean,
    val suspensionExpirationUtc: Any?,
    val hasVerifiedEmail: Boolean,
    val isSuspended: Boolean,
    val prefVideoAutoplay: Boolean,
    val inRedesignBeta: Boolean,
    val iconImg: String,
    val hasModMail: Boolean,
    val prefNightmode: Boolean,
    val oauthClientId: String,
    val hideFromRobots: Boolean,
    val linkKarma: Int,
    val forcePasswordReset: Boolean,
    val seenGiveAwardTooltip: Boolean,
    val inboxCount: Int,
    val prefTopKarmaSubreddits: Boolean,
    val hasMail: Boolean,
    val prefShowSnoovatar: Boolean,
    val name: String,
    val prefClickgadget: Int,
    val created: Double,
    val goldCreddits: Int,
    val createdUtc: Double,
    val prefShowTwitter: Boolean,
    val inBeta: Boolean,
    val commentKarma: Int,
    val hasSubscribed: Boolean,
    val seenSubredditChatFtux: Boolean
)

data class FeaturesInfo(
    val promotedTrendBlanks: Boolean,
    val showAmpLink: Boolean,
    val twitterEmbed: Boolean,
    val isEmailPermissionRequired: Boolean,
    val modAwards: Boolean,
    val awardsOnStreams: Boolean,
    val mwebXpromoModalListingClickDailyDismissibleAndroid: Boolean,
    val mwebXpromoModalListingClickDailyDismissibleIos: Boolean,
    val mwebXpromoInterstitialCommentsAndroid: Boolean,
    val mwebXpromoInterstitialCommentsIos: Boolean,
    val chatSubreddit: Boolean,
    val modlogCopyrightRemoval: Boolean,
    val doNotTrack: Boolean,
    val chatUserSettings: Boolean,
    val communityAwards: Boolean,
    val premiumSubscriptionsTable: Boolean,
    val deleteVodWhenPostIsDeleted: Boolean,
    val chatGroupRollout: Boolean,
    val customFeeds: Boolean,
    val spezModal: Boolean,
    val expensiveCoinsPackage: Boolean

/*
		"mweb_xpromo_revamp_v3": {
			"owner": "growth",
			"variant": "treatment_2",
			"experiment_id": 480
		},
		"mweb_xpromo_revamp_v2": {
			"owner": "growth",
			"variant": "treatment_4",
			"experiment_id": 457
		},
		"mweb_sharing_web_share_api": {
			"owner": "growth",
			"variant": "control_1",
			"experiment_id": 314
		},
		"mweb_sharing_clipboard": {
			"owner": "growth",
			"variant": "control_2",
			"experiment_id": 315
		},
*/
)

data class SubredditInfo(
    val defaultSet: Boolean,
    val userIsContributor: Boolean,
    val bannerImg: String,
    val restrictPosting: Boolean,
    val userIsBanned: Boolean,
    val freeFormReports: Boolean,
    val communityIcon: String,
    val showMedia: Boolean,
    val iconColor: String,
    val userIsMuted: Boolean,
    val displayName: String,
    val headerImg: String?,
    val title: String?,
    val coins: Int,
    val over18: Boolean,
    val iconSize: IntArray, /*eg [256, 256]*/
    val primaryColor: String,
    val iconImg: String,
    val description: String,
    val submitLinkLable: String,
    val headerSize: Any?,
    val restrictCommenting: Boolean,
    val subscribers: Int,
    val submitTextLabel: String,
    val isDefaultIcon: Boolean,
    val linkFlairPosition: String,
    val displayNamePrefixed: String,
    val keyColor: String,
    val name: String,
    val isDefaultBanner: Boolean,
    val url: String,
    val bannerSize: Any?,
    val userIsModerator: Boolean,
    val publicDescription: String,
    val linkFlairEnabled: Boolean,
    val disableContributorRequests: Boolean,
    val subredditType: String,
    val userIsSubscriber: Boolean
)
name: Build release APK

on:
  push:
    branches:
      - master
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  apk:
    name: Generate release APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu
          cache: gradle
      - name: chmod gradlew
        run: chmod +x gradlew
      - name: Build APK
        run: ./gradlew buildRelease --stacktrace
      - name: Sign APK
        id: sign_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/release
          signingKeyBase64: ${{ secrets.SIGNING_KEYSTORE }}
          alias: ${{ secrets.SIGNING_ALIAS }}
          keyStorePassword: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.SIGNING_ALIAS_PASSWORD }}
      - run: echo "Build status report=${{ job.status }}."
      - name: Upload App Bundle
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: ${{steps.sign_aab.outputs.signedReleaseFile}}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          repository: idunnololz/summit-for-lemmy
          token: ${{ secrets.GH_TOKEN }}
#  release:
#    name: Release APK
#    needs: apk
#    if: startsWith(github.ref, 'refs/tags/v')
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download APK from build
#        uses: actions/download-artifact@v1
#        with:
#          name: apk
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#      - name: Upload Release APK
#        id: upload_release_asset
#        uses: actions/upload-release-asset@v1.0.1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: apk/app-debug.apk
#          asset_name: MensaApp.apk
#          asset_content_type: application/zip
